import {Out} from '@snickbit/out'
import {safeVarName, slugify} from '@snickbit/utilities'
import path from 'path'
import fs from 'fs'
import readline from 'readline'

export const DEFAULT_CONFIG_NAME = 'indexer.config.json'

export const posix = path.posix

export const FILE_PATTERN = '*.{js|mjs|vue|ts}'

export const indexPredicate = p => !p.match(/\/index\.[a-z]+$/)

export const indexer_banner = '// WARNING: This file is automatically generated. Any changes will be lost the next time the generator is run.'

export const $out = new Out('indexer')

export function getExportName(fp) {
	const dirname = path.dirname(fp)
	const basename = path.basename(fp)
	const filename = path.basename(fp, path.extname(fp))
	const export_name = safeVarName(filename)
	const slug = safeVarName(slugify(path.join(dirname, filename)))
	return {
		basename,
		filename,
		export_name,
		slug
	}
}

export async function getFirstLine(pathToFile) {
	const readable = fs.createReadStream(pathToFile)
	const reader = readline.createInterface({input: readable})
	const line = await new Promise((resolve) => {
		reader.on('line', (line) => {
			reader.close()
			resolve(line)
		})
	})
	readable.close()
	return line
}

export function makeExport(export_type, file_path, fp) {
	const {export_name, slug} = getExportName(fp)
	switch (export_type) {
		case 'slug':
			return `export * as ${slug} from '${file_path}'`
		case 'group':
			return `export * as ${export_name} from '${file_path}'`
		case 'individual':
		case 'wildcard':
			return `export * from '${file_path}'`
		default:
			return `export {default as ${export_name}} from '${file_path}'`
	}
}
